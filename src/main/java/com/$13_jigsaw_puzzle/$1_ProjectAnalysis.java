package com.$13_jigsaw_puzzle;

/*
    拼图小游戏项目分析:
        1. 主界面分析:
            a. JFrame: 最外层的窗体
            b. JMenuBar: 最上层的菜单
            c. JLabel: 管理文字和图片的容器
            创建主界面:
                JFrame: 一个描述界面的JavaBean类
                a. 创建一个宽603像素, 高680像素的游戏主界面
                b. 创建一个宽488像素, 高430像素的登录界面
                c. 创建一个宽488像素, 高500像素的注册界面
        2. 游戏界面菜单制作:
            JMenuBar ==> 菜单类
            a. 先创建JMenuBar对象
            b. 再创建JMenu对象
            c. 再创建JMenuItem对象
            d. 把JMenuItem放到JMenu中
            e. 把JMenu放到JMenuBar中
            f. 把JMenuBar放到JFrame界面中
        3. 游戏界面添加图片:
            对应类: ImageIcon
            JLabel管理区域: 可以管理文字和图片
            a. 创建ImageIcon对象
            b. 创建JLabel对象
                指定图片位置
            c. 将 JLabel对象添加到界面中
        4. 打乱图片:
            先定义一维数组, 存储数字0-15, 先打乱一维数组元素顺序, 再定义二维数组, 将一维数组数据存储入二维数组, 遍历二维数组,
            通过格式化字符串, 改变图片添加顺序
        5. 事件:
            事件源: 按钮, 图片, 窗体等
            事件: 指某些操作, 如鼠标单击, 鼠标划入等
            绑定监听: 当事件源上发生了某个事件, 则执行某段代码
                例: KeyListener: 键盘监听
                    MouseListener: 鼠标监听
                    ActionListener: 动作监听
        6. 美化界面:
            a. 将拼图图片移动至界面中央, x, y 个增加100像素
            b. 添加背景图片, 在添加拼图图片之后(因为后添加的图片会在其他图片下方显示)
            c. 给拼图图片图片设置边框线
        7. 绑定监听, 移动图片
        8. 显示完整图片
        9. 作弊码, 一键拼图
        10. 判断胜利
        11. 统计步数
        12. 重新游戏:
            a. 给重新游戏菜单绑定点击事件
                实现ActionListener接口, 重写抽象方法
            b. 重新打乱二维数组的数字
            c. 加载图片
            d. 计步器清零
        13. 关闭游戏:
            a. 给关闭游戏菜单绑定点击事件
            b. 结束虚拟机, 关闭游戏
 */

public class $1_ProjectAnalysis {
}
