package com.$24_NetworkProgramming;

/*
    网络编程:
        指在网络通信协议下, 不同计算机上运行的程序, 进行的数据传输
        应用场景:
            即时通信, 网游对战, 金融证券, 国际贸易, 邮件等等
        java中可以使用java.net包下的技术轻松开发出常见的网络应用程序
        常见的软件架构:
            1. C/S ==> Client/Server ==> 客户端/服务器
                在用户本地需要下载客户端程序, 在远程有一个服务器程序, 用户通过客户端访问服务器
                优点: 画面可以做的非常精美, 用户体验好
                缺点: 需要同时开发客户端和服务端, 开发部署和维护非常麻烦, 并且当服务端更新后, 客户端要同步更新
            2. B/S ==> Browser/Server ==> 浏览器/服务器
                只需要一个浏览器, 用户通过不同的网址, 可以访问不同的服务器, 用户通过浏览器访问服务器
                优点: 不需要客户端, 只需要 前端页面 + 服务端 就可以访问, 开发部署和维护简单
                缺点: 如果应用过大, 会影响用户体验
        网络编程三要素:
            1. IP地址 ==> 网络设备在网络中的地址, 是唯一的标识
            2. 端口号 ==> 应用程序在设备中的唯一标识
            3. 传输协议 ==> 数据在网络中传输的规则, 常见的协议有: UDP、TCP、http、Https、ftp等
 */
public class $1_NetworkProgrammingSummarize {
}
